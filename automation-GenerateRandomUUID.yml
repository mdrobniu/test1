comment: Generates a random UUID (UUID 4).
commonfields:
  id: GenerateRandomUUID
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 1.19.74
    packID: CommonScripts
    packName: Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.12.8.3296088
enabled: true
engineinfo: {}
mainengineinfo: {}
name: GenerateRandomUUID
outputs:
- contextPath: GeneratedUUID
  description: The generated UUID.
  type: string
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('GenerateRandomUUID', 'start', __line__())
  CONSTANT_PACK_VERSION = '1.19.74'
  demisto.debug('pack id = CommonScripts, pack version = 1.19.74')




  import uuid


  """ STANDALONE FUNCTION """


  def generate_random_uuid() -> str:
      return str(uuid.uuid4())


  """ COMMAND FUNCTION """


  def generate_random_uuid_command() -> CommandResults:
      outputs = {"GeneratedUUID": generate_random_uuid()}

      return CommandResults(
          readable_output=f'## Random UUID Generated: {outputs["GeneratedUUID"]}',
          outputs=outputs,
      )


  """ MAIN FUNCTION """


  def main():
      try:
          return_results(generate_random_uuid_command())
      except Exception as ex:
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f"Failed to execute GenerateRandomUUID. Error: {ex!s}")


  """ ENTRY POINT """


  if __name__ in ("__main__", "__builtin__", "builtins"):
      main()

  register_module_line('GenerateRandomUUID', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags: []
type: python
